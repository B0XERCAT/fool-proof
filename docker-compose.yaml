services:
  # Docker container run configuration for front end
  client:
    build: ./client
    image: fool-proof-client:latest
    container_name: fool-proof-client
    ports:
      - "3000:3000"
    environment:
      FOOLPROOF_BACKEND_URL: ${FOOLPROOF_BACKEND_URL}
    develop:
      watch:
        # sync when file in host file changes except for files in ignore.
        - action: sync
          path: ./client
          target: /fool-proof
          ignore: 
            - node_modules/
            - .next/
        # rebuild when dependencies change
        - action: rebuild
          path: ./client/package.json
        - action: rebuild
          path: ./client/pnpm-lock.json
        # sync and then restart when configs change
        - action: sync+restart
          path: ./client/next.config.json
          target: /fool-proof/next.config.json
        - action: sync+restart
          path: ./client/postcss.config.mjs
          target: /fool-proof/postcss.config.mjs
        - action: sync+restart
          path: ./client/tailwind.config.ts
          target: /fool-proof/tailwind.config.ts
        - action: sync+restart
          path: ./client/tsconfig.json
          target: /fool-proof/tsconfig.json
        - action: sync+restart
          path: ./client/components.json
          target: /fool-proof/components.json
  # Docker container run configuration for backend
  server:
    build: ./server
    image: fool-proof-server:latest
    container_name: fool-proof-server
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
    ports:
      - "8080:8080"
    depends_on:
      - database
    develop:
      watch:
        - action: sync
          path: ./server/src
          target: /server/src
        - action: rebuild
          path: ./server/build.gradle
  # Docker container run configuration for database
  database:
    image: mysql:8.0
    container_name: fool-proof-db
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    # volumes:
    #   - ./database/var/lib/mysql:/var/lib/mysql
          

